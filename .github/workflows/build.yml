# a chaque push, la ci se lance
on:
  push:

jobs:
  # name pour ce job
  get-version:
    # récupération du code get-version sur le repo de shiipou sur la branche main
    uses: shiipou/github-actions/.github/workflows/get-version.yml@main
    with:
      # détecter mes branches de release (je peux en mettre plusieurs)
      release-branches: '^(main)$'
    
  # name pour un autre job
  build:
   name: Spring build
   runs-on: ubuntu-latest
   # on doit lui dire qu'on a besoin de get-version pour le build
   needs: 
     - get-version
   steps:
     - name: Print version
       # pipe pour mettre plusieurs echo dans le run
       run: |
         echo "${{ needs.get-version.outputs.version }}"
         echo "${{ needs.get-version.outputs.changelogs }}"
         echo "${{ needs.get-version.outputs.is-prerelease }}"
         echo "${{ needs.get-version.outputs.will-release }}"
     - name: Setup java
       uses: actions/setup-java@v4
       with:
         distribution: 'temurin'
         java-version: 17
     - name: Setup gradle
       uses: gradle/actions/setup-gradle@v4
     - name: Checkout clone source code
       uses: actions/checkout@v4
     - name: Build with Gradle
       # variable d'environnement pour que gradle en ait connaissance
       env:
         VERSION: "${{ needs.get-version.outputs.version }}"
       run: ./gradlew bootjar
     - run: ls -lia build/libs
